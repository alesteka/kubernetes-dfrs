name: Django CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master", "dev" ]

env:
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  SECRET_KEY: ${{ secrets.SECRET_KEY }}
  REDIS_USERNAME: ${{ secrets.REDIS_USERNAME }}
  REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
  BREVO_MASTER_PASS: ${{ secrets.BREVO_MASTER_PASS }}
  ENV_TYPE: venv
  DEP_PATH: requirements.txt

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.10.10]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Scan Django settings for security issues
      id: check
      uses: victoriadrake/django-security-check@master
    - id: results
      run: |
        OUTPUT=$(cat output.txt)
        FORMATTED=${OUTPUT//$'\n'/%0A}
        echo ::set-output name=file::**Django Security Check identified issues:** %0A$FORMATTED
    - name: Comment with output
      uses: actions/github-script@v3
      with:
        github-token: ${{ secrets.TOKEN }}
        script: |
          github.issues.createComment({
            issue_number: ${{ github.event.number }},
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `${{ steps.results.outputs.file }}`
          })
